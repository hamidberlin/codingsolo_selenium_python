name: Selenium Tests  # Der Name des CI-Workflows, der in GitHub Actions angezeigt wird

# Dieser Abschnitt gibt an, wann der Workflow ausgeführt wird:
on:
  push:  # Wenn Code in den main Branch gepusht wird, wird der Workflow ausgeführt
    branches:
      - main  # Nur für den "main"-Branch
  pull_request:  # Wenn ein Pull-Request in den main Branch gemacht wird, wird der Workflow ausgeführt
    branches:
      - main  # Nur für Pull-Requests, die in den "main"-Branch gemerged werden

jobs:  # Ein Job definiert die Schritte, die innerhalb des Workflows ausgeführt werden
  test:  # Der Name des Jobs, hier "test"
    runs-on: ubuntu-latest  # Der Job wird auf einer Ubuntu-Umgebung ausgeführt, die GitHub Actions bereitstellt

    steps:  # Die Schritte, die im Job ausgeführt werden
      - name: Checkout Repository  # Schritt, um das Repository in die Build-Umgebung zu klonen
        uses: actions/checkout@v3  # Verwendet die 'checkout'-Action, um den Code zu klonen

      - name: Set up Python  # Schritt, um Python in der angegebenen Version zu installieren
        uses: actions/setup-python@v4  # Verwendet die 'setup-python'-Action, um die Python-Umgebung einzurichten
        with:
          python-version: '3.9'  # Gibt die Version von Python an, die verwendet werden soll (hier 3.9)

      - name: Install Dependencies  # Schritt, um alle Abhängigkeiten zu installieren
        run: |  # Führen Sie diesen Befehl aus
          pip install -r requirements.txt  # Installiert alle Python-Abhängigkeiten, die in der requirements.txt definiert sind

      - name: Run Selenium Tests  # Schritt, um die Selenium-Tests auszuführen
        run: |  # Führen Sie diesen Befehl aus
          pytest --html=report.html --self-contained-html  # Führt 'pytest' aus, um die Tests auszuführen und einen HTML-Testbericht zu erstellen

      - name: Upload Test Report  # Schritt, um den Testbericht als Artefakt hochzuladen
        uses: actions/upload-artifact@v2  # Verwendet die 'upload-artifact'-Action, um den Testbericht hochzuladen
        with:
          name: selenium-test-report  # Der Name des hochgeladenen Artefakts
          path: report.html  # Der Pfad zur Datei, die hochgeladen werden soll (hier der Testbericht)
